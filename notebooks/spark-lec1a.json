{"paragraphs":[{"text":"val conf = sc.getConf\nconf.getOption(\"spark.local.dir\")\nconf.getOption(\"spark.app.name\")\n//conf.getAll\nprintln(conf.toDebugString)","dateUpdated":"Feb 26, 2016 6:32:09 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1456529037977_-1694975528","id":"20160226-152357_1289488829","result":{"code":"SUCCESS","type":"TEXT","msg":"conf: org.apache.spark.SparkConf = org.apache.spark.SparkConf@1836c038\nres467: Option[String] = None\nres468: Option[String] = Some(Zeppelin)\nargs=\nmaster=local[*]\nspark.app.id=local-1456354057431\nspark.app.name=Zeppelin\nspark.driver.extraClassPath=:/Users/cem3394/Documents/_code/zeppelin-0.5.6-incubating-bin-all/interpreter/spark/dep/*:/Users/cem3394/Documents/_code/zeppelin-0.5.6-incubating-bin-all/interpreter/spark/*::/Users/cem3394/Documents/_code/zeppelin-0.5.6-incubating-bin-all/conf:/Users/cem3394/Documents/_code/zeppelin-0.5.6-incubating-bin-all/conf:/Users/cem3394/Documents/_code/zeppelin-0.5.6-incubating-bin-all/lib/zeppelin-interpreter-0.5.6-incubating.jar\nspark.driver.host=172.16.1.105\nspark.driver.port=53706\nspark.executor.extraClassPath=:/Users/cem3394/Documents/_code/zeppelin-0.5.6-incubating-bin-all/interpreter/spark/dep/*:/Users/cem3394/Documents/_code/zeppelin-0.5.6-incubating-bin-all/interpreter/spark/*::/Users/cem3394/Documents/_code/zeppelin-0.5.6-incubating-bin-all/conf:/Users/cem3394/Documents/_code/zeppelin-0.5.6-incubating-bin-all/conf:/Users/cem3394/Documents/_code/zeppelin-0.5.6-incubating-bin-all/lib/zeppelin-interpreter-0.5.6-incubating.jar\nspark.executor.id=driver\nspark.executor.memory=512m\nspark.externalBlockStore.folderName=spark-61f2efbf-10af-4972-9634-64d3cf288a5a\nspark.master=local[*]\nspark.repl.class.uri=http://172.16.1.105:53703\nspark.scheduler.mode=FAIR\nzeppelin.dep.additionalRemoteRepository=spark-packages,http://dl.bintray.com/spark-packages/maven,false;\nzeppelin.dep.localrepo=local-repo\nzeppelin.pyspark.python=python\nzeppelin.spark.concurrentSQL=false\nzeppelin.spark.maxResult=1000\nzeppelin.spark.useHiveContext=true\n"},"dateCreated":"Feb 26, 2016 3:23:57 PM","dateStarted":"Feb 26, 2016 6:32:09 PM","dateFinished":"Feb 26, 2016 6:32:10 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:300"},{"text":"val lines = sc.textFile( \"/Users/cem3394/Documents/data/1950.txt\" )\nlines.flatMap( (l) => l.split(\" \") )\n  .map( (w) => (w,1) )\n  .reduceByKey( _ + _ )\n  .saveAsTextFile( \"WordCount.txt\" )","dateUpdated":"Feb 29, 2016 9:23:48 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1456807440890_-772140189","id":"20160229-204400_470621206","result":{"code":"SUCCESS","type":"TEXT","msg":"lines: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[21] at textFile at <console>:92\n"},"dateCreated":"Feb 29, 2016 8:44:00 PM","dateStarted":"Feb 29, 2016 9:23:33 PM","dateFinished":"Feb 29, 2016 9:23:34 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:223","focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1456809787916_-433987542","id":"20160229-212307_1933532322","dateCreated":"Feb 29, 2016 9:23:07 PM","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:259","text":"val nyt = \"Special to THE NEW YORK TIMES.\"\nval linesWithNYT = lines.filter {_ contains nyt} //transformation\nlinesWithNYT.count() //action","dateUpdated":"Feb 29, 2016 9:23:48 PM","dateFinished":"Feb 29, 2016 9:23:50 PM","dateStarted":"Feb 29, 2016 9:23:48 PM","result":{"code":"SUCCESS","type":"TEXT","msg":"nyt: String = Special to THE NEW YORK TIMES.\nlinesWithNYT: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[22] at filter at <console>:96\nres509: Long = 36067\n"}},{"text":"import org.apache.spark.TaskContext\nsc.runJob(lines, (t: TaskContext, i: Iterator[String]) => 1) ","dateUpdated":"Feb 29, 2016 9:29:32 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1456808939296_1959905911","id":"20160229-210859_1713636177","result":{"code":"SUCCESS","type":"TEXT","msg":"res505: Array[Int] = Array(1, 1)\n"},"dateCreated":"Feb 29, 2016 9:08:59 PM","dateStarted":"Feb 29, 2016 9:14:52 PM","dateFinished":"Feb 29, 2016 9:14:52 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:241"},{"text":"val foo = sc.parallelize(0 to 10)\nsc.runJob(foo, (t: TaskContext, i: Iterator[Int]) => 1) ","dateUpdated":"Feb 29, 2016 9:29:01 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1456805940504_-1234734250","id":"20160229-201900_1023143706","result":{"code":"SUCCESS","type":"TEXT","msg":"foo: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[23] at parallelize at <console>:92\nres511: Array[Int] = Array(1, 1, 1, 1)\n"},"dateCreated":"Feb 29, 2016 8:19:00 PM","dateStarted":"Feb 29, 2016 9:29:01 PM","dateFinished":"Feb 29, 2016 9:29:02 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:61","focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1456811434640_70006157","id":"20160229-215034_1195534893","dateCreated":"Feb 29, 2016 9:50:34 PM","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:349","text":"def computeAvg(input: RDD[Int]) = {\n  input.aggregate((0, 0))((x, y) => (x._1 + y, x._2 + 1),\n    (x,y) => (x._1 + y._1, x._2 + y._2))\n}\n  \nval input = sc.parallelize(List(1,2,3,4))\nval result = computeAvg(input)\nval avg = result._1 / result._2.toFloat\nprintln(result)","dateUpdated":"Feb 29, 2016 9:50:47 PM"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1456809292342_-447176798","id":"20160229-211452_26895056","dateCreated":"Feb 29, 2016 9:14:52 PM","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:203","dateUpdated":"Feb 29, 2016 9:29:59 PM","text":"def pitDepth(p: Int, q: Int, r: Int) = (p - q) min (r - q)\n\ndef updateDepths(pqrd: (Int,Int,Int,Int), x: Int): (Int,Int,Int,Int) = pqrd match {\n  case (p,q,r,d) if x <= q && x >  p => (x,q,r,d) //upslope reset\n  case (p,q,r,d) if x >  q && x <  r => (r,x,Int.MinValue,d max pitDepth(p,q,r)) //update d and reset\n  case (p,q,r,d) if x <= q           => (p,x,r,d) //update q\n  case (p,q,r,d) if x >  q && x >= r => (p,q,x,d max pitDepth(p,q,x)) //update r and d\n}\n\ndef maxDepth(list: List[Int]): Int = list match {\n  case Nil => -1\n  case head :: tail => tail.foldLeft((head,Int.MaxValue,Int.MinValue,-1)) ((quad,x)=>updateDepths(quad,x))._4\n}\n\nval A: Array[Int] = Array(9,10,7,6,5,6,6,5,3,7,8,12)\nmaxDepth(A.toList)\n"}],"name":"spark-lec1","id":"2BENWYRGK","angularObjects":{"2BCSZYWYA":[],"2B956YWNV":[],"2BC6W6857":[],"2B92D2YFF":[],"2BBG6HC2F":[],"2B9T31FJZ":[],"2BBJF778P":[],"2BB6YM4DJ":[],"2BBRY8E4A":[],"2BAQREC7J":[],"2BC97GWDB":[],"2BBX9KVBV":[],"2BADXE7AU":[],"2BBBV3PP8":[]},"config":{"looknfeel":"default"},"info":{}}